// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFluxInstall(args: GetFluxInstallArgs, opts?: pulumi.InvokeOptions): Promise<GetFluxInstallResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("flux:index/getFluxInstall:getFluxInstall", {
        "baseurl": args.baseurl,
        "clusterDomain": args.clusterDomain,
        "components": args.components,
        "componentsExtras": args.componentsExtras,
        "imagePullSecrets": args.imagePullSecrets,
        "logLevel": args.logLevel,
        "namespace": args.namespace,
        "networkPolicy": args.networkPolicy,
        "registry": args.registry,
        "targetPath": args.targetPath,
        "tolerationKeys": args.tolerationKeys,
        "version": args.version,
        "watchAllNamespaces": args.watchAllNamespaces,
    }, opts);
}

/**
 * A collection of arguments for invoking getFluxInstall.
 */
export interface GetFluxInstallArgs {
    baseurl?: string;
    clusterDomain?: string;
    components?: string[];
    componentsExtras?: string[];
    imagePullSecrets?: string;
    logLevel?: string;
    namespace?: string;
    networkPolicy?: boolean;
    registry?: string;
    targetPath: string;
    tolerationKeys?: string[];
    version?: string;
    watchAllNamespaces?: boolean;
}

/**
 * A collection of values returned by getFluxInstall.
 */
export interface GetFluxInstallResult {
    readonly baseurl?: string;
    readonly clusterDomain?: string;
    readonly components?: string[];
    readonly componentsExtras?: string[];
    readonly content: string;
    readonly id: string;
    readonly imagePullSecrets?: string;
    readonly logLevel?: string;
    readonly namespace?: string;
    readonly networkPolicy?: boolean;
    readonly path: string;
    readonly registry?: string;
    readonly targetPath: string;
    readonly tolerationKeys?: string[];
    readonly version?: string;
    readonly watchAllNamespaces?: boolean;
}
export function getFluxInstallOutput(args: GetFluxInstallOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFluxInstallResult> {
    return pulumi.output(args).apply((a: any) => getFluxInstall(a, opts))
}

/**
 * A collection of arguments for invoking getFluxInstall.
 */
export interface GetFluxInstallOutputArgs {
    baseurl?: pulumi.Input<string>;
    clusterDomain?: pulumi.Input<string>;
    components?: pulumi.Input<pulumi.Input<string>[]>;
    componentsExtras?: pulumi.Input<pulumi.Input<string>[]>;
    imagePullSecrets?: pulumi.Input<string>;
    logLevel?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    networkPolicy?: pulumi.Input<boolean>;
    registry?: pulumi.Input<string>;
    targetPath: pulumi.Input<string>;
    tolerationKeys?: pulumi.Input<pulumi.Input<string>[]>;
    version?: pulumi.Input<string>;
    watchAllNamespaces?: pulumi.Input<boolean>;
}
