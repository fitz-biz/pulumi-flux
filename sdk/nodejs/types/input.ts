// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface FluxBootstrapGitTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface ProviderGit {
    authorEmail?: pulumi.Input<string>;
    authorName?: pulumi.Input<string>;
    branch?: pulumi.Input<string>;
    commitMessageAppendix?: pulumi.Input<string>;
    gpgKeyId?: pulumi.Input<string>;
    gpgKeyRing?: pulumi.Input<string>;
    gpgPassphrase?: pulumi.Input<string>;
    http?: pulumi.Input<inputs.ProviderGitHttp>;
    ssh?: pulumi.Input<inputs.ProviderGitSsh>;
    url: pulumi.Input<string>;
}

export interface ProviderGitHttp {
    allowInsecureHttp?: pulumi.Input<boolean>;
    certificateAuthority?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

export interface ProviderGitSsh {
    password?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

export interface ProviderKubernetes {
    clientCertificate?: pulumi.Input<string>;
    clientKey?: pulumi.Input<string>;
    clusterCaCertificate?: pulumi.Input<string>;
    configContext?: pulumi.Input<string>;
    configContextAuthInfo?: pulumi.Input<string>;
    configContextCluster?: pulumi.Input<string>;
    configPath?: pulumi.Input<string>;
    configPaths?: pulumi.Input<pulumi.Input<string>[]>;
    exec?: pulumi.Input<inputs.ProviderKubernetesExec>;
    host?: pulumi.Input<string>;
    insecure?: pulumi.Input<boolean>;
    password?: pulumi.Input<string>;
    proxyUrl?: pulumi.Input<string>;
    token?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

export interface ProviderKubernetesExec {
    apiVersion: pulumi.Input<string>;
    args?: pulumi.Input<pulumi.Input<string>[]>;
    command: pulumi.Input<string>;
    env?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
export namespace config {
}
