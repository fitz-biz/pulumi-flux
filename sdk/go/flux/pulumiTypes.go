// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package flux

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FluxBootstrapGitTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// FluxBootstrapGitTimeoutsInput is an input type that accepts FluxBootstrapGitTimeoutsArgs and FluxBootstrapGitTimeoutsOutput values.
// You can construct a concrete instance of `FluxBootstrapGitTimeoutsInput` via:
//
//	FluxBootstrapGitTimeoutsArgs{...}
type FluxBootstrapGitTimeoutsInput interface {
	pulumi.Input

	ToFluxBootstrapGitTimeoutsOutput() FluxBootstrapGitTimeoutsOutput
	ToFluxBootstrapGitTimeoutsOutputWithContext(context.Context) FluxBootstrapGitTimeoutsOutput
}

type FluxBootstrapGitTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (FluxBootstrapGitTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FluxBootstrapGitTimeouts)(nil)).Elem()
}

func (i FluxBootstrapGitTimeoutsArgs) ToFluxBootstrapGitTimeoutsOutput() FluxBootstrapGitTimeoutsOutput {
	return i.ToFluxBootstrapGitTimeoutsOutputWithContext(context.Background())
}

func (i FluxBootstrapGitTimeoutsArgs) ToFluxBootstrapGitTimeoutsOutputWithContext(ctx context.Context) FluxBootstrapGitTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxBootstrapGitTimeoutsOutput)
}

func (i FluxBootstrapGitTimeoutsArgs) ToFluxBootstrapGitTimeoutsPtrOutput() FluxBootstrapGitTimeoutsPtrOutput {
	return i.ToFluxBootstrapGitTimeoutsPtrOutputWithContext(context.Background())
}

func (i FluxBootstrapGitTimeoutsArgs) ToFluxBootstrapGitTimeoutsPtrOutputWithContext(ctx context.Context) FluxBootstrapGitTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxBootstrapGitTimeoutsOutput).ToFluxBootstrapGitTimeoutsPtrOutputWithContext(ctx)
}

// FluxBootstrapGitTimeoutsPtrInput is an input type that accepts FluxBootstrapGitTimeoutsArgs, FluxBootstrapGitTimeoutsPtr and FluxBootstrapGitTimeoutsPtrOutput values.
// You can construct a concrete instance of `FluxBootstrapGitTimeoutsPtrInput` via:
//
//	        FluxBootstrapGitTimeoutsArgs{...}
//
//	or:
//
//	        nil
type FluxBootstrapGitTimeoutsPtrInput interface {
	pulumi.Input

	ToFluxBootstrapGitTimeoutsPtrOutput() FluxBootstrapGitTimeoutsPtrOutput
	ToFluxBootstrapGitTimeoutsPtrOutputWithContext(context.Context) FluxBootstrapGitTimeoutsPtrOutput
}

type fluxBootstrapGitTimeoutsPtrType FluxBootstrapGitTimeoutsArgs

func FluxBootstrapGitTimeoutsPtr(v *FluxBootstrapGitTimeoutsArgs) FluxBootstrapGitTimeoutsPtrInput {
	return (*fluxBootstrapGitTimeoutsPtrType)(v)
}

func (*fluxBootstrapGitTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FluxBootstrapGitTimeouts)(nil)).Elem()
}

func (i *fluxBootstrapGitTimeoutsPtrType) ToFluxBootstrapGitTimeoutsPtrOutput() FluxBootstrapGitTimeoutsPtrOutput {
	return i.ToFluxBootstrapGitTimeoutsPtrOutputWithContext(context.Background())
}

func (i *fluxBootstrapGitTimeoutsPtrType) ToFluxBootstrapGitTimeoutsPtrOutputWithContext(ctx context.Context) FluxBootstrapGitTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxBootstrapGitTimeoutsPtrOutput)
}

type FluxBootstrapGitTimeoutsOutput struct{ *pulumi.OutputState }

func (FluxBootstrapGitTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FluxBootstrapGitTimeouts)(nil)).Elem()
}

func (o FluxBootstrapGitTimeoutsOutput) ToFluxBootstrapGitTimeoutsOutput() FluxBootstrapGitTimeoutsOutput {
	return o
}

func (o FluxBootstrapGitTimeoutsOutput) ToFluxBootstrapGitTimeoutsOutputWithContext(ctx context.Context) FluxBootstrapGitTimeoutsOutput {
	return o
}

func (o FluxBootstrapGitTimeoutsOutput) ToFluxBootstrapGitTimeoutsPtrOutput() FluxBootstrapGitTimeoutsPtrOutput {
	return o.ToFluxBootstrapGitTimeoutsPtrOutputWithContext(context.Background())
}

func (o FluxBootstrapGitTimeoutsOutput) ToFluxBootstrapGitTimeoutsPtrOutputWithContext(ctx context.Context) FluxBootstrapGitTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FluxBootstrapGitTimeouts) *FluxBootstrapGitTimeouts {
		return &v
	}).(FluxBootstrapGitTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o FluxBootstrapGitTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FluxBootstrapGitTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o FluxBootstrapGitTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FluxBootstrapGitTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o FluxBootstrapGitTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FluxBootstrapGitTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o FluxBootstrapGitTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FluxBootstrapGitTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type FluxBootstrapGitTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (FluxBootstrapGitTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FluxBootstrapGitTimeouts)(nil)).Elem()
}

func (o FluxBootstrapGitTimeoutsPtrOutput) ToFluxBootstrapGitTimeoutsPtrOutput() FluxBootstrapGitTimeoutsPtrOutput {
	return o
}

func (o FluxBootstrapGitTimeoutsPtrOutput) ToFluxBootstrapGitTimeoutsPtrOutputWithContext(ctx context.Context) FluxBootstrapGitTimeoutsPtrOutput {
	return o
}

func (o FluxBootstrapGitTimeoutsPtrOutput) Elem() FluxBootstrapGitTimeoutsOutput {
	return o.ApplyT(func(v *FluxBootstrapGitTimeouts) FluxBootstrapGitTimeouts {
		if v != nil {
			return *v
		}
		var ret FluxBootstrapGitTimeouts
		return ret
	}).(FluxBootstrapGitTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o FluxBootstrapGitTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxBootstrapGitTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o FluxBootstrapGitTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxBootstrapGitTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o FluxBootstrapGitTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxBootstrapGitTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o FluxBootstrapGitTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxBootstrapGitTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type ProviderGit struct {
	AuthorEmail           *string          `pulumi:"authorEmail"`
	AuthorName            *string          `pulumi:"authorName"`
	Branch                *string          `pulumi:"branch"`
	CommitMessageAppendix *string          `pulumi:"commitMessageAppendix"`
	GpgKeyId              *string          `pulumi:"gpgKeyId"`
	GpgKeyRing            *string          `pulumi:"gpgKeyRing"`
	GpgPassphrase         *string          `pulumi:"gpgPassphrase"`
	Http                  *ProviderGitHttp `pulumi:"http"`
	Ssh                   *ProviderGitSsh  `pulumi:"ssh"`
	Url                   string           `pulumi:"url"`
}

// ProviderGitInput is an input type that accepts ProviderGitArgs and ProviderGitOutput values.
// You can construct a concrete instance of `ProviderGitInput` via:
//
//	ProviderGitArgs{...}
type ProviderGitInput interface {
	pulumi.Input

	ToProviderGitOutput() ProviderGitOutput
	ToProviderGitOutputWithContext(context.Context) ProviderGitOutput
}

type ProviderGitArgs struct {
	AuthorEmail           pulumi.StringPtrInput   `pulumi:"authorEmail"`
	AuthorName            pulumi.StringPtrInput   `pulumi:"authorName"`
	Branch                pulumi.StringPtrInput   `pulumi:"branch"`
	CommitMessageAppendix pulumi.StringPtrInput   `pulumi:"commitMessageAppendix"`
	GpgKeyId              pulumi.StringPtrInput   `pulumi:"gpgKeyId"`
	GpgKeyRing            pulumi.StringPtrInput   `pulumi:"gpgKeyRing"`
	GpgPassphrase         pulumi.StringPtrInput   `pulumi:"gpgPassphrase"`
	Http                  ProviderGitHttpPtrInput `pulumi:"http"`
	Ssh                   ProviderGitSshPtrInput  `pulumi:"ssh"`
	Url                   pulumi.StringInput      `pulumi:"url"`
}

func (ProviderGitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderGit)(nil)).Elem()
}

func (i ProviderGitArgs) ToProviderGitOutput() ProviderGitOutput {
	return i.ToProviderGitOutputWithContext(context.Background())
}

func (i ProviderGitArgs) ToProviderGitOutputWithContext(ctx context.Context) ProviderGitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderGitOutput)
}

func (i ProviderGitArgs) ToProviderGitPtrOutput() ProviderGitPtrOutput {
	return i.ToProviderGitPtrOutputWithContext(context.Background())
}

func (i ProviderGitArgs) ToProviderGitPtrOutputWithContext(ctx context.Context) ProviderGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderGitOutput).ToProviderGitPtrOutputWithContext(ctx)
}

// ProviderGitPtrInput is an input type that accepts ProviderGitArgs, ProviderGitPtr and ProviderGitPtrOutput values.
// You can construct a concrete instance of `ProviderGitPtrInput` via:
//
//	        ProviderGitArgs{...}
//
//	or:
//
//	        nil
type ProviderGitPtrInput interface {
	pulumi.Input

	ToProviderGitPtrOutput() ProviderGitPtrOutput
	ToProviderGitPtrOutputWithContext(context.Context) ProviderGitPtrOutput
}

type providerGitPtrType ProviderGitArgs

func ProviderGitPtr(v *ProviderGitArgs) ProviderGitPtrInput {
	return (*providerGitPtrType)(v)
}

func (*providerGitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderGit)(nil)).Elem()
}

func (i *providerGitPtrType) ToProviderGitPtrOutput() ProviderGitPtrOutput {
	return i.ToProviderGitPtrOutputWithContext(context.Background())
}

func (i *providerGitPtrType) ToProviderGitPtrOutputWithContext(ctx context.Context) ProviderGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderGitPtrOutput)
}

type ProviderGitOutput struct{ *pulumi.OutputState }

func (ProviderGitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderGit)(nil)).Elem()
}

func (o ProviderGitOutput) ToProviderGitOutput() ProviderGitOutput {
	return o
}

func (o ProviderGitOutput) ToProviderGitOutputWithContext(ctx context.Context) ProviderGitOutput {
	return o
}

func (o ProviderGitOutput) ToProviderGitPtrOutput() ProviderGitPtrOutput {
	return o.ToProviderGitPtrOutputWithContext(context.Background())
}

func (o ProviderGitOutput) ToProviderGitPtrOutputWithContext(ctx context.Context) ProviderGitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderGit) *ProviderGit {
		return &v
	}).(ProviderGitPtrOutput)
}

func (o ProviderGitOutput) AuthorEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGit) *string { return v.AuthorEmail }).(pulumi.StringPtrOutput)
}

func (o ProviderGitOutput) AuthorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGit) *string { return v.AuthorName }).(pulumi.StringPtrOutput)
}

func (o ProviderGitOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGit) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o ProviderGitOutput) CommitMessageAppendix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGit) *string { return v.CommitMessageAppendix }).(pulumi.StringPtrOutput)
}

func (o ProviderGitOutput) GpgKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGit) *string { return v.GpgKeyId }).(pulumi.StringPtrOutput)
}

func (o ProviderGitOutput) GpgKeyRing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGit) *string { return v.GpgKeyRing }).(pulumi.StringPtrOutput)
}

func (o ProviderGitOutput) GpgPassphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGit) *string { return v.GpgPassphrase }).(pulumi.StringPtrOutput)
}

func (o ProviderGitOutput) Http() ProviderGitHttpPtrOutput {
	return o.ApplyT(func(v ProviderGit) *ProviderGitHttp { return v.Http }).(ProviderGitHttpPtrOutput)
}

func (o ProviderGitOutput) Ssh() ProviderGitSshPtrOutput {
	return o.ApplyT(func(v ProviderGit) *ProviderGitSsh { return v.Ssh }).(ProviderGitSshPtrOutput)
}

func (o ProviderGitOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderGit) string { return v.Url }).(pulumi.StringOutput)
}

type ProviderGitPtrOutput struct{ *pulumi.OutputState }

func (ProviderGitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderGit)(nil)).Elem()
}

func (o ProviderGitPtrOutput) ToProviderGitPtrOutput() ProviderGitPtrOutput {
	return o
}

func (o ProviderGitPtrOutput) ToProviderGitPtrOutputWithContext(ctx context.Context) ProviderGitPtrOutput {
	return o
}

func (o ProviderGitPtrOutput) Elem() ProviderGitOutput {
	return o.ApplyT(func(v *ProviderGit) ProviderGit {
		if v != nil {
			return *v
		}
		var ret ProviderGit
		return ret
	}).(ProviderGitOutput)
}

func (o ProviderGitPtrOutput) AuthorEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGit) *string {
		if v == nil {
			return nil
		}
		return v.AuthorEmail
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitPtrOutput) AuthorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGit) *string {
		if v == nil {
			return nil
		}
		return v.AuthorName
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGit) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitPtrOutput) CommitMessageAppendix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGit) *string {
		if v == nil {
			return nil
		}
		return v.CommitMessageAppendix
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitPtrOutput) GpgKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGit) *string {
		if v == nil {
			return nil
		}
		return v.GpgKeyId
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitPtrOutput) GpgKeyRing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGit) *string {
		if v == nil {
			return nil
		}
		return v.GpgKeyRing
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitPtrOutput) GpgPassphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGit) *string {
		if v == nil {
			return nil
		}
		return v.GpgPassphrase
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitPtrOutput) Http() ProviderGitHttpPtrOutput {
	return o.ApplyT(func(v *ProviderGit) *ProviderGitHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(ProviderGitHttpPtrOutput)
}

func (o ProviderGitPtrOutput) Ssh() ProviderGitSshPtrOutput {
	return o.ApplyT(func(v *ProviderGit) *ProviderGitSsh {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(ProviderGitSshPtrOutput)
}

func (o ProviderGitPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGit) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type ProviderGitHttp struct {
	AllowInsecureHttp    *bool   `pulumi:"allowInsecureHttp"`
	CertificateAuthority *string `pulumi:"certificateAuthority"`
	Password             *string `pulumi:"password"`
	Username             *string `pulumi:"username"`
}

// ProviderGitHttpInput is an input type that accepts ProviderGitHttpArgs and ProviderGitHttpOutput values.
// You can construct a concrete instance of `ProviderGitHttpInput` via:
//
//	ProviderGitHttpArgs{...}
type ProviderGitHttpInput interface {
	pulumi.Input

	ToProviderGitHttpOutput() ProviderGitHttpOutput
	ToProviderGitHttpOutputWithContext(context.Context) ProviderGitHttpOutput
}

type ProviderGitHttpArgs struct {
	AllowInsecureHttp    pulumi.BoolPtrInput   `pulumi:"allowInsecureHttp"`
	CertificateAuthority pulumi.StringPtrInput `pulumi:"certificateAuthority"`
	Password             pulumi.StringPtrInput `pulumi:"password"`
	Username             pulumi.StringPtrInput `pulumi:"username"`
}

func (ProviderGitHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderGitHttp)(nil)).Elem()
}

func (i ProviderGitHttpArgs) ToProviderGitHttpOutput() ProviderGitHttpOutput {
	return i.ToProviderGitHttpOutputWithContext(context.Background())
}

func (i ProviderGitHttpArgs) ToProviderGitHttpOutputWithContext(ctx context.Context) ProviderGitHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderGitHttpOutput)
}

func (i ProviderGitHttpArgs) ToProviderGitHttpPtrOutput() ProviderGitHttpPtrOutput {
	return i.ToProviderGitHttpPtrOutputWithContext(context.Background())
}

func (i ProviderGitHttpArgs) ToProviderGitHttpPtrOutputWithContext(ctx context.Context) ProviderGitHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderGitHttpOutput).ToProviderGitHttpPtrOutputWithContext(ctx)
}

// ProviderGitHttpPtrInput is an input type that accepts ProviderGitHttpArgs, ProviderGitHttpPtr and ProviderGitHttpPtrOutput values.
// You can construct a concrete instance of `ProviderGitHttpPtrInput` via:
//
//	        ProviderGitHttpArgs{...}
//
//	or:
//
//	        nil
type ProviderGitHttpPtrInput interface {
	pulumi.Input

	ToProviderGitHttpPtrOutput() ProviderGitHttpPtrOutput
	ToProviderGitHttpPtrOutputWithContext(context.Context) ProviderGitHttpPtrOutput
}

type providerGitHttpPtrType ProviderGitHttpArgs

func ProviderGitHttpPtr(v *ProviderGitHttpArgs) ProviderGitHttpPtrInput {
	return (*providerGitHttpPtrType)(v)
}

func (*providerGitHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderGitHttp)(nil)).Elem()
}

func (i *providerGitHttpPtrType) ToProviderGitHttpPtrOutput() ProviderGitHttpPtrOutput {
	return i.ToProviderGitHttpPtrOutputWithContext(context.Background())
}

func (i *providerGitHttpPtrType) ToProviderGitHttpPtrOutputWithContext(ctx context.Context) ProviderGitHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderGitHttpPtrOutput)
}

type ProviderGitHttpOutput struct{ *pulumi.OutputState }

func (ProviderGitHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderGitHttp)(nil)).Elem()
}

func (o ProviderGitHttpOutput) ToProviderGitHttpOutput() ProviderGitHttpOutput {
	return o
}

func (o ProviderGitHttpOutput) ToProviderGitHttpOutputWithContext(ctx context.Context) ProviderGitHttpOutput {
	return o
}

func (o ProviderGitHttpOutput) ToProviderGitHttpPtrOutput() ProviderGitHttpPtrOutput {
	return o.ToProviderGitHttpPtrOutputWithContext(context.Background())
}

func (o ProviderGitHttpOutput) ToProviderGitHttpPtrOutputWithContext(ctx context.Context) ProviderGitHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderGitHttp) *ProviderGitHttp {
		return &v
	}).(ProviderGitHttpPtrOutput)
}

func (o ProviderGitHttpOutput) AllowInsecureHttp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProviderGitHttp) *bool { return v.AllowInsecureHttp }).(pulumi.BoolPtrOutput)
}

func (o ProviderGitHttpOutput) CertificateAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGitHttp) *string { return v.CertificateAuthority }).(pulumi.StringPtrOutput)
}

func (o ProviderGitHttpOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGitHttp) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ProviderGitHttpOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGitHttp) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ProviderGitHttpPtrOutput struct{ *pulumi.OutputState }

func (ProviderGitHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderGitHttp)(nil)).Elem()
}

func (o ProviderGitHttpPtrOutput) ToProviderGitHttpPtrOutput() ProviderGitHttpPtrOutput {
	return o
}

func (o ProviderGitHttpPtrOutput) ToProviderGitHttpPtrOutputWithContext(ctx context.Context) ProviderGitHttpPtrOutput {
	return o
}

func (o ProviderGitHttpPtrOutput) Elem() ProviderGitHttpOutput {
	return o.ApplyT(func(v *ProviderGitHttp) ProviderGitHttp {
		if v != nil {
			return *v
		}
		var ret ProviderGitHttp
		return ret
	}).(ProviderGitHttpOutput)
}

func (o ProviderGitHttpPtrOutput) AllowInsecureHttp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProviderGitHttp) *bool {
		if v == nil {
			return nil
		}
		return v.AllowInsecureHttp
	}).(pulumi.BoolPtrOutput)
}

func (o ProviderGitHttpPtrOutput) CertificateAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGitHttp) *string {
		if v == nil {
			return nil
		}
		return v.CertificateAuthority
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitHttpPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGitHttp) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitHttpPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGitHttp) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ProviderGitSsh struct {
	Password   *string `pulumi:"password"`
	PrivateKey *string `pulumi:"privateKey"`
	Username   *string `pulumi:"username"`
}

// ProviderGitSshInput is an input type that accepts ProviderGitSshArgs and ProviderGitSshOutput values.
// You can construct a concrete instance of `ProviderGitSshInput` via:
//
//	ProviderGitSshArgs{...}
type ProviderGitSshInput interface {
	pulumi.Input

	ToProviderGitSshOutput() ProviderGitSshOutput
	ToProviderGitSshOutputWithContext(context.Context) ProviderGitSshOutput
}

type ProviderGitSshArgs struct {
	Password   pulumi.StringPtrInput `pulumi:"password"`
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	Username   pulumi.StringPtrInput `pulumi:"username"`
}

func (ProviderGitSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderGitSsh)(nil)).Elem()
}

func (i ProviderGitSshArgs) ToProviderGitSshOutput() ProviderGitSshOutput {
	return i.ToProviderGitSshOutputWithContext(context.Background())
}

func (i ProviderGitSshArgs) ToProviderGitSshOutputWithContext(ctx context.Context) ProviderGitSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderGitSshOutput)
}

func (i ProviderGitSshArgs) ToProviderGitSshPtrOutput() ProviderGitSshPtrOutput {
	return i.ToProviderGitSshPtrOutputWithContext(context.Background())
}

func (i ProviderGitSshArgs) ToProviderGitSshPtrOutputWithContext(ctx context.Context) ProviderGitSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderGitSshOutput).ToProviderGitSshPtrOutputWithContext(ctx)
}

// ProviderGitSshPtrInput is an input type that accepts ProviderGitSshArgs, ProviderGitSshPtr and ProviderGitSshPtrOutput values.
// You can construct a concrete instance of `ProviderGitSshPtrInput` via:
//
//	        ProviderGitSshArgs{...}
//
//	or:
//
//	        nil
type ProviderGitSshPtrInput interface {
	pulumi.Input

	ToProviderGitSshPtrOutput() ProviderGitSshPtrOutput
	ToProviderGitSshPtrOutputWithContext(context.Context) ProviderGitSshPtrOutput
}

type providerGitSshPtrType ProviderGitSshArgs

func ProviderGitSshPtr(v *ProviderGitSshArgs) ProviderGitSshPtrInput {
	return (*providerGitSshPtrType)(v)
}

func (*providerGitSshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderGitSsh)(nil)).Elem()
}

func (i *providerGitSshPtrType) ToProviderGitSshPtrOutput() ProviderGitSshPtrOutput {
	return i.ToProviderGitSshPtrOutputWithContext(context.Background())
}

func (i *providerGitSshPtrType) ToProviderGitSshPtrOutputWithContext(ctx context.Context) ProviderGitSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderGitSshPtrOutput)
}

type ProviderGitSshOutput struct{ *pulumi.OutputState }

func (ProviderGitSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderGitSsh)(nil)).Elem()
}

func (o ProviderGitSshOutput) ToProviderGitSshOutput() ProviderGitSshOutput {
	return o
}

func (o ProviderGitSshOutput) ToProviderGitSshOutputWithContext(ctx context.Context) ProviderGitSshOutput {
	return o
}

func (o ProviderGitSshOutput) ToProviderGitSshPtrOutput() ProviderGitSshPtrOutput {
	return o.ToProviderGitSshPtrOutputWithContext(context.Background())
}

func (o ProviderGitSshOutput) ToProviderGitSshPtrOutputWithContext(ctx context.Context) ProviderGitSshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderGitSsh) *ProviderGitSsh {
		return &v
	}).(ProviderGitSshPtrOutput)
}

func (o ProviderGitSshOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGitSsh) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ProviderGitSshOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGitSsh) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o ProviderGitSshOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGitSsh) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ProviderGitSshPtrOutput struct{ *pulumi.OutputState }

func (ProviderGitSshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderGitSsh)(nil)).Elem()
}

func (o ProviderGitSshPtrOutput) ToProviderGitSshPtrOutput() ProviderGitSshPtrOutput {
	return o
}

func (o ProviderGitSshPtrOutput) ToProviderGitSshPtrOutputWithContext(ctx context.Context) ProviderGitSshPtrOutput {
	return o
}

func (o ProviderGitSshPtrOutput) Elem() ProviderGitSshOutput {
	return o.ApplyT(func(v *ProviderGitSsh) ProviderGitSsh {
		if v != nil {
			return *v
		}
		var ret ProviderGitSsh
		return ret
	}).(ProviderGitSshOutput)
}

func (o ProviderGitSshPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGitSsh) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitSshPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGitSsh) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitSshPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGitSsh) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ProviderKubernetes struct {
	ClientCertificate     *string                 `pulumi:"clientCertificate"`
	ClientKey             *string                 `pulumi:"clientKey"`
	ClusterCaCertificate  *string                 `pulumi:"clusterCaCertificate"`
	ConfigContext         *string                 `pulumi:"configContext"`
	ConfigContextAuthInfo *string                 `pulumi:"configContextAuthInfo"`
	ConfigContextCluster  *string                 `pulumi:"configContextCluster"`
	ConfigPath            *string                 `pulumi:"configPath"`
	ConfigPaths           []string                `pulumi:"configPaths"`
	Exec                  *ProviderKubernetesExec `pulumi:"exec"`
	Host                  *string                 `pulumi:"host"`
	Insecure              *bool                   `pulumi:"insecure"`
	Password              *string                 `pulumi:"password"`
	ProxyUrl              *string                 `pulumi:"proxyUrl"`
	Token                 *string                 `pulumi:"token"`
	Username              *string                 `pulumi:"username"`
}

// ProviderKubernetesInput is an input type that accepts ProviderKubernetesArgs and ProviderKubernetesOutput values.
// You can construct a concrete instance of `ProviderKubernetesInput` via:
//
//	ProviderKubernetesArgs{...}
type ProviderKubernetesInput interface {
	pulumi.Input

	ToProviderKubernetesOutput() ProviderKubernetesOutput
	ToProviderKubernetesOutputWithContext(context.Context) ProviderKubernetesOutput
}

type ProviderKubernetesArgs struct {
	ClientCertificate     pulumi.StringPtrInput          `pulumi:"clientCertificate"`
	ClientKey             pulumi.StringPtrInput          `pulumi:"clientKey"`
	ClusterCaCertificate  pulumi.StringPtrInput          `pulumi:"clusterCaCertificate"`
	ConfigContext         pulumi.StringPtrInput          `pulumi:"configContext"`
	ConfigContextAuthInfo pulumi.StringPtrInput          `pulumi:"configContextAuthInfo"`
	ConfigContextCluster  pulumi.StringPtrInput          `pulumi:"configContextCluster"`
	ConfigPath            pulumi.StringPtrInput          `pulumi:"configPath"`
	ConfigPaths           pulumi.StringArrayInput        `pulumi:"configPaths"`
	Exec                  ProviderKubernetesExecPtrInput `pulumi:"exec"`
	Host                  pulumi.StringPtrInput          `pulumi:"host"`
	Insecure              pulumi.BoolPtrInput            `pulumi:"insecure"`
	Password              pulumi.StringPtrInput          `pulumi:"password"`
	ProxyUrl              pulumi.StringPtrInput          `pulumi:"proxyUrl"`
	Token                 pulumi.StringPtrInput          `pulumi:"token"`
	Username              pulumi.StringPtrInput          `pulumi:"username"`
}

func (ProviderKubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderKubernetes)(nil)).Elem()
}

func (i ProviderKubernetesArgs) ToProviderKubernetesOutput() ProviderKubernetesOutput {
	return i.ToProviderKubernetesOutputWithContext(context.Background())
}

func (i ProviderKubernetesArgs) ToProviderKubernetesOutputWithContext(ctx context.Context) ProviderKubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesOutput)
}

func (i ProviderKubernetesArgs) ToProviderKubernetesPtrOutput() ProviderKubernetesPtrOutput {
	return i.ToProviderKubernetesPtrOutputWithContext(context.Background())
}

func (i ProviderKubernetesArgs) ToProviderKubernetesPtrOutputWithContext(ctx context.Context) ProviderKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesOutput).ToProviderKubernetesPtrOutputWithContext(ctx)
}

// ProviderKubernetesPtrInput is an input type that accepts ProviderKubernetesArgs, ProviderKubernetesPtr and ProviderKubernetesPtrOutput values.
// You can construct a concrete instance of `ProviderKubernetesPtrInput` via:
//
//	        ProviderKubernetesArgs{...}
//
//	or:
//
//	        nil
type ProviderKubernetesPtrInput interface {
	pulumi.Input

	ToProviderKubernetesPtrOutput() ProviderKubernetesPtrOutput
	ToProviderKubernetesPtrOutputWithContext(context.Context) ProviderKubernetesPtrOutput
}

type providerKubernetesPtrType ProviderKubernetesArgs

func ProviderKubernetesPtr(v *ProviderKubernetesArgs) ProviderKubernetesPtrInput {
	return (*providerKubernetesPtrType)(v)
}

func (*providerKubernetesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderKubernetes)(nil)).Elem()
}

func (i *providerKubernetesPtrType) ToProviderKubernetesPtrOutput() ProviderKubernetesPtrOutput {
	return i.ToProviderKubernetesPtrOutputWithContext(context.Background())
}

func (i *providerKubernetesPtrType) ToProviderKubernetesPtrOutputWithContext(ctx context.Context) ProviderKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesPtrOutput)
}

type ProviderKubernetesOutput struct{ *pulumi.OutputState }

func (ProviderKubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderKubernetes)(nil)).Elem()
}

func (o ProviderKubernetesOutput) ToProviderKubernetesOutput() ProviderKubernetesOutput {
	return o
}

func (o ProviderKubernetesOutput) ToProviderKubernetesOutputWithContext(ctx context.Context) ProviderKubernetesOutput {
	return o
}

func (o ProviderKubernetesOutput) ToProviderKubernetesPtrOutput() ProviderKubernetesPtrOutput {
	return o.ToProviderKubernetesPtrOutputWithContext(context.Background())
}

func (o ProviderKubernetesOutput) ToProviderKubernetesPtrOutputWithContext(ctx context.Context) ProviderKubernetesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderKubernetes) *ProviderKubernetes {
		return &v
	}).(ProviderKubernetesPtrOutput)
}

func (o ProviderKubernetesOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ConfigContext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ConfigContext }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ConfigContextAuthInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ConfigContextAuthInfo }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ConfigContextCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ConfigContextCluster }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ConfigPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ConfigPath }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ConfigPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderKubernetes) []string { return v.ConfigPaths }).(pulumi.StringArrayOutput)
}

func (o ProviderKubernetesOutput) Exec() ProviderKubernetesExecPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *ProviderKubernetesExec { return v.Exec }).(ProviderKubernetesExecPtrOutput)
}

func (o ProviderKubernetesOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

func (o ProviderKubernetesOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ProxyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ProxyUrl }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.Token }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ProviderKubernetesPtrOutput struct{ *pulumi.OutputState }

func (ProviderKubernetesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderKubernetes)(nil)).Elem()
}

func (o ProviderKubernetesPtrOutput) ToProviderKubernetesPtrOutput() ProviderKubernetesPtrOutput {
	return o
}

func (o ProviderKubernetesPtrOutput) ToProviderKubernetesPtrOutputWithContext(ctx context.Context) ProviderKubernetesPtrOutput {
	return o
}

func (o ProviderKubernetesPtrOutput) Elem() ProviderKubernetesOutput {
	return o.ApplyT(func(v *ProviderKubernetes) ProviderKubernetes {
		if v != nil {
			return *v
		}
		var ret ProviderKubernetes
		return ret
	}).(ProviderKubernetesOutput)
}

func (o ProviderKubernetesPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ClientKey
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ClusterCaCertificate
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ConfigContext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ConfigContext
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ConfigContextAuthInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ConfigContextAuthInfo
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ConfigContextCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ConfigContextCluster
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ConfigPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ConfigPath
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ConfigPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderKubernetes) []string {
		if v == nil {
			return nil
		}
		return v.ConfigPaths
	}).(pulumi.StringArrayOutput)
}

func (o ProviderKubernetesPtrOutput) Exec() ProviderKubernetesExecPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *ProviderKubernetesExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(ProviderKubernetesExecPtrOutput)
}

func (o ProviderKubernetesPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

func (o ProviderKubernetesPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ProxyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ProxyUrl
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.Token
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ProviderKubernetesExec struct {
	ApiVersion string            `pulumi:"apiVersion"`
	Args       []string          `pulumi:"args"`
	Command    string            `pulumi:"command"`
	Env        map[string]string `pulumi:"env"`
}

// ProviderKubernetesExecInput is an input type that accepts ProviderKubernetesExecArgs and ProviderKubernetesExecOutput values.
// You can construct a concrete instance of `ProviderKubernetesExecInput` via:
//
//	ProviderKubernetesExecArgs{...}
type ProviderKubernetesExecInput interface {
	pulumi.Input

	ToProviderKubernetesExecOutput() ProviderKubernetesExecOutput
	ToProviderKubernetesExecOutputWithContext(context.Context) ProviderKubernetesExecOutput
}

type ProviderKubernetesExecArgs struct {
	ApiVersion pulumi.StringInput      `pulumi:"apiVersion"`
	Args       pulumi.StringArrayInput `pulumi:"args"`
	Command    pulumi.StringInput      `pulumi:"command"`
	Env        pulumi.StringMapInput   `pulumi:"env"`
}

func (ProviderKubernetesExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderKubernetesExec)(nil)).Elem()
}

func (i ProviderKubernetesExecArgs) ToProviderKubernetesExecOutput() ProviderKubernetesExecOutput {
	return i.ToProviderKubernetesExecOutputWithContext(context.Background())
}

func (i ProviderKubernetesExecArgs) ToProviderKubernetesExecOutputWithContext(ctx context.Context) ProviderKubernetesExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesExecOutput)
}

func (i ProviderKubernetesExecArgs) ToProviderKubernetesExecPtrOutput() ProviderKubernetesExecPtrOutput {
	return i.ToProviderKubernetesExecPtrOutputWithContext(context.Background())
}

func (i ProviderKubernetesExecArgs) ToProviderKubernetesExecPtrOutputWithContext(ctx context.Context) ProviderKubernetesExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesExecOutput).ToProviderKubernetesExecPtrOutputWithContext(ctx)
}

// ProviderKubernetesExecPtrInput is an input type that accepts ProviderKubernetesExecArgs, ProviderKubernetesExecPtr and ProviderKubernetesExecPtrOutput values.
// You can construct a concrete instance of `ProviderKubernetesExecPtrInput` via:
//
//	        ProviderKubernetesExecArgs{...}
//
//	or:
//
//	        nil
type ProviderKubernetesExecPtrInput interface {
	pulumi.Input

	ToProviderKubernetesExecPtrOutput() ProviderKubernetesExecPtrOutput
	ToProviderKubernetesExecPtrOutputWithContext(context.Context) ProviderKubernetesExecPtrOutput
}

type providerKubernetesExecPtrType ProviderKubernetesExecArgs

func ProviderKubernetesExecPtr(v *ProviderKubernetesExecArgs) ProviderKubernetesExecPtrInput {
	return (*providerKubernetesExecPtrType)(v)
}

func (*providerKubernetesExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderKubernetesExec)(nil)).Elem()
}

func (i *providerKubernetesExecPtrType) ToProviderKubernetesExecPtrOutput() ProviderKubernetesExecPtrOutput {
	return i.ToProviderKubernetesExecPtrOutputWithContext(context.Background())
}

func (i *providerKubernetesExecPtrType) ToProviderKubernetesExecPtrOutputWithContext(ctx context.Context) ProviderKubernetesExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesExecPtrOutput)
}

type ProviderKubernetesExecOutput struct{ *pulumi.OutputState }

func (ProviderKubernetesExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderKubernetesExec)(nil)).Elem()
}

func (o ProviderKubernetesExecOutput) ToProviderKubernetesExecOutput() ProviderKubernetesExecOutput {
	return o
}

func (o ProviderKubernetesExecOutput) ToProviderKubernetesExecOutputWithContext(ctx context.Context) ProviderKubernetesExecOutput {
	return o
}

func (o ProviderKubernetesExecOutput) ToProviderKubernetesExecPtrOutput() ProviderKubernetesExecPtrOutput {
	return o.ToProviderKubernetesExecPtrOutputWithContext(context.Background())
}

func (o ProviderKubernetesExecOutput) ToProviderKubernetesExecPtrOutputWithContext(ctx context.Context) ProviderKubernetesExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderKubernetesExec) *ProviderKubernetesExec {
		return &v
	}).(ProviderKubernetesExecPtrOutput)
}

func (o ProviderKubernetesExecOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderKubernetesExec) string { return v.ApiVersion }).(pulumi.StringOutput)
}

func (o ProviderKubernetesExecOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderKubernetesExec) []string { return v.Args }).(pulumi.StringArrayOutput)
}

func (o ProviderKubernetesExecOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderKubernetesExec) string { return v.Command }).(pulumi.StringOutput)
}

func (o ProviderKubernetesExecOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProviderKubernetesExec) map[string]string { return v.Env }).(pulumi.StringMapOutput)
}

type ProviderKubernetesExecPtrOutput struct{ *pulumi.OutputState }

func (ProviderKubernetesExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderKubernetesExec)(nil)).Elem()
}

func (o ProviderKubernetesExecPtrOutput) ToProviderKubernetesExecPtrOutput() ProviderKubernetesExecPtrOutput {
	return o
}

func (o ProviderKubernetesExecPtrOutput) ToProviderKubernetesExecPtrOutputWithContext(ctx context.Context) ProviderKubernetesExecPtrOutput {
	return o
}

func (o ProviderKubernetesExecPtrOutput) Elem() ProviderKubernetesExecOutput {
	return o.ApplyT(func(v *ProviderKubernetesExec) ProviderKubernetesExec {
		if v != nil {
			return *v
		}
		var ret ProviderKubernetesExec
		return ret
	}).(ProviderKubernetesExecOutput)
}

func (o ProviderKubernetesExecPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetesExec) *string {
		if v == nil {
			return nil
		}
		return &v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesExecPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderKubernetesExec) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

func (o ProviderKubernetesExecPtrOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetesExec) *string {
		if v == nil {
			return nil
		}
		return &v.Command
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesExecPtrOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProviderKubernetesExec) map[string]string {
		if v == nil {
			return nil
		}
		return v.Env
	}).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FluxBootstrapGitTimeoutsInput)(nil)).Elem(), FluxBootstrapGitTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FluxBootstrapGitTimeoutsPtrInput)(nil)).Elem(), FluxBootstrapGitTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderGitInput)(nil)).Elem(), ProviderGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderGitPtrInput)(nil)).Elem(), ProviderGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderGitHttpInput)(nil)).Elem(), ProviderGitHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderGitHttpPtrInput)(nil)).Elem(), ProviderGitHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderGitSshInput)(nil)).Elem(), ProviderGitSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderGitSshPtrInput)(nil)).Elem(), ProviderGitSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderKubernetesInput)(nil)).Elem(), ProviderKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderKubernetesPtrInput)(nil)).Elem(), ProviderKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderKubernetesExecInput)(nil)).Elem(), ProviderKubernetesExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderKubernetesExecPtrInput)(nil)).Elem(), ProviderKubernetesExecArgs{})
	pulumi.RegisterOutputType(FluxBootstrapGitTimeoutsOutput{})
	pulumi.RegisterOutputType(FluxBootstrapGitTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(ProviderGitOutput{})
	pulumi.RegisterOutputType(ProviderGitPtrOutput{})
	pulumi.RegisterOutputType(ProviderGitHttpOutput{})
	pulumi.RegisterOutputType(ProviderGitHttpPtrOutput{})
	pulumi.RegisterOutputType(ProviderGitSshOutput{})
	pulumi.RegisterOutputType(ProviderGitSshPtrOutput{})
	pulumi.RegisterOutputType(ProviderKubernetesOutput{})
	pulumi.RegisterOutputType(ProviderKubernetesPtrOutput{})
	pulumi.RegisterOutputType(ProviderKubernetesExecOutput{})
	pulumi.RegisterOutputType(ProviderKubernetesExecPtrOutput{})
}
