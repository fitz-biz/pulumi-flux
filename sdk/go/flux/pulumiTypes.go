// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package flux

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ProviderGit struct {
	AuthorEmail           *string          `pulumi:"authorEmail"`
	AuthorName            *string          `pulumi:"authorName"`
	Branch                *string          `pulumi:"branch"`
	CommitMessageAppendix *string          `pulumi:"commitMessageAppendix"`
	GpgKeyId              *string          `pulumi:"gpgKeyId"`
	GpgKeyRing            *string          `pulumi:"gpgKeyRing"`
	GpgPassphrase         *string          `pulumi:"gpgPassphrase"`
	Http                  *ProviderGitHttp `pulumi:"http"`
	Ssh                   *ProviderGitSsh  `pulumi:"ssh"`
	Url                   string           `pulumi:"url"`
}

// ProviderGitInput is an input type that accepts ProviderGitArgs and ProviderGitOutput values.
// You can construct a concrete instance of `ProviderGitInput` via:
//
//	ProviderGitArgs{...}
type ProviderGitInput interface {
	pulumi.Input

	ToProviderGitOutput() ProviderGitOutput
	ToProviderGitOutputWithContext(context.Context) ProviderGitOutput
}

type ProviderGitArgs struct {
	AuthorEmail           pulumi.StringPtrInput   `pulumi:"authorEmail"`
	AuthorName            pulumi.StringPtrInput   `pulumi:"authorName"`
	Branch                pulumi.StringPtrInput   `pulumi:"branch"`
	CommitMessageAppendix pulumi.StringPtrInput   `pulumi:"commitMessageAppendix"`
	GpgKeyId              pulumi.StringPtrInput   `pulumi:"gpgKeyId"`
	GpgKeyRing            pulumi.StringPtrInput   `pulumi:"gpgKeyRing"`
	GpgPassphrase         pulumi.StringPtrInput   `pulumi:"gpgPassphrase"`
	Http                  ProviderGitHttpPtrInput `pulumi:"http"`
	Ssh                   ProviderGitSshPtrInput  `pulumi:"ssh"`
	Url                   pulumi.StringInput      `pulumi:"url"`
}

func (ProviderGitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderGit)(nil)).Elem()
}

func (i ProviderGitArgs) ToProviderGitOutput() ProviderGitOutput {
	return i.ToProviderGitOutputWithContext(context.Background())
}

func (i ProviderGitArgs) ToProviderGitOutputWithContext(ctx context.Context) ProviderGitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderGitOutput)
}

func (i ProviderGitArgs) ToProviderGitPtrOutput() ProviderGitPtrOutput {
	return i.ToProviderGitPtrOutputWithContext(context.Background())
}

func (i ProviderGitArgs) ToProviderGitPtrOutputWithContext(ctx context.Context) ProviderGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderGitOutput).ToProviderGitPtrOutputWithContext(ctx)
}

// ProviderGitPtrInput is an input type that accepts ProviderGitArgs, ProviderGitPtr and ProviderGitPtrOutput values.
// You can construct a concrete instance of `ProviderGitPtrInput` via:
//
//	        ProviderGitArgs{...}
//
//	or:
//
//	        nil
type ProviderGitPtrInput interface {
	pulumi.Input

	ToProviderGitPtrOutput() ProviderGitPtrOutput
	ToProviderGitPtrOutputWithContext(context.Context) ProviderGitPtrOutput
}

type providerGitPtrType ProviderGitArgs

func ProviderGitPtr(v *ProviderGitArgs) ProviderGitPtrInput {
	return (*providerGitPtrType)(v)
}

func (*providerGitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderGit)(nil)).Elem()
}

func (i *providerGitPtrType) ToProviderGitPtrOutput() ProviderGitPtrOutput {
	return i.ToProviderGitPtrOutputWithContext(context.Background())
}

func (i *providerGitPtrType) ToProviderGitPtrOutputWithContext(ctx context.Context) ProviderGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderGitPtrOutput)
}

type ProviderGitOutput struct{ *pulumi.OutputState }

func (ProviderGitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderGit)(nil)).Elem()
}

func (o ProviderGitOutput) ToProviderGitOutput() ProviderGitOutput {
	return o
}

func (o ProviderGitOutput) ToProviderGitOutputWithContext(ctx context.Context) ProviderGitOutput {
	return o
}

func (o ProviderGitOutput) ToProviderGitPtrOutput() ProviderGitPtrOutput {
	return o.ToProviderGitPtrOutputWithContext(context.Background())
}

func (o ProviderGitOutput) ToProviderGitPtrOutputWithContext(ctx context.Context) ProviderGitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderGit) *ProviderGit {
		return &v
	}).(ProviderGitPtrOutput)
}

func (o ProviderGitOutput) AuthorEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGit) *string { return v.AuthorEmail }).(pulumi.StringPtrOutput)
}

func (o ProviderGitOutput) AuthorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGit) *string { return v.AuthorName }).(pulumi.StringPtrOutput)
}

func (o ProviderGitOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGit) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o ProviderGitOutput) CommitMessageAppendix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGit) *string { return v.CommitMessageAppendix }).(pulumi.StringPtrOutput)
}

func (o ProviderGitOutput) GpgKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGit) *string { return v.GpgKeyId }).(pulumi.StringPtrOutput)
}

func (o ProviderGitOutput) GpgKeyRing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGit) *string { return v.GpgKeyRing }).(pulumi.StringPtrOutput)
}

func (o ProviderGitOutput) GpgPassphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGit) *string { return v.GpgPassphrase }).(pulumi.StringPtrOutput)
}

func (o ProviderGitOutput) Http() ProviderGitHttpPtrOutput {
	return o.ApplyT(func(v ProviderGit) *ProviderGitHttp { return v.Http }).(ProviderGitHttpPtrOutput)
}

func (o ProviderGitOutput) Ssh() ProviderGitSshPtrOutput {
	return o.ApplyT(func(v ProviderGit) *ProviderGitSsh { return v.Ssh }).(ProviderGitSshPtrOutput)
}

func (o ProviderGitOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderGit) string { return v.Url }).(pulumi.StringOutput)
}

type ProviderGitPtrOutput struct{ *pulumi.OutputState }

func (ProviderGitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderGit)(nil)).Elem()
}

func (o ProviderGitPtrOutput) ToProviderGitPtrOutput() ProviderGitPtrOutput {
	return o
}

func (o ProviderGitPtrOutput) ToProviderGitPtrOutputWithContext(ctx context.Context) ProviderGitPtrOutput {
	return o
}

func (o ProviderGitPtrOutput) Elem() ProviderGitOutput {
	return o.ApplyT(func(v *ProviderGit) ProviderGit {
		if v != nil {
			return *v
		}
		var ret ProviderGit
		return ret
	}).(ProviderGitOutput)
}

func (o ProviderGitPtrOutput) AuthorEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGit) *string {
		if v == nil {
			return nil
		}
		return v.AuthorEmail
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitPtrOutput) AuthorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGit) *string {
		if v == nil {
			return nil
		}
		return v.AuthorName
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGit) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitPtrOutput) CommitMessageAppendix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGit) *string {
		if v == nil {
			return nil
		}
		return v.CommitMessageAppendix
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitPtrOutput) GpgKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGit) *string {
		if v == nil {
			return nil
		}
		return v.GpgKeyId
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitPtrOutput) GpgKeyRing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGit) *string {
		if v == nil {
			return nil
		}
		return v.GpgKeyRing
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitPtrOutput) GpgPassphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGit) *string {
		if v == nil {
			return nil
		}
		return v.GpgPassphrase
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitPtrOutput) Http() ProviderGitHttpPtrOutput {
	return o.ApplyT(func(v *ProviderGit) *ProviderGitHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(ProviderGitHttpPtrOutput)
}

func (o ProviderGitPtrOutput) Ssh() ProviderGitSshPtrOutput {
	return o.ApplyT(func(v *ProviderGit) *ProviderGitSsh {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(ProviderGitSshPtrOutput)
}

func (o ProviderGitPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGit) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type ProviderGitHttp struct {
	AllowInsecureHttp    *bool   `pulumi:"allowInsecureHttp"`
	CertificateAuthority *string `pulumi:"certificateAuthority"`
	Password             *string `pulumi:"password"`
	Username             *string `pulumi:"username"`
}

// ProviderGitHttpInput is an input type that accepts ProviderGitHttpArgs and ProviderGitHttpOutput values.
// You can construct a concrete instance of `ProviderGitHttpInput` via:
//
//	ProviderGitHttpArgs{...}
type ProviderGitHttpInput interface {
	pulumi.Input

	ToProviderGitHttpOutput() ProviderGitHttpOutput
	ToProviderGitHttpOutputWithContext(context.Context) ProviderGitHttpOutput
}

type ProviderGitHttpArgs struct {
	AllowInsecureHttp    pulumi.BoolPtrInput   `pulumi:"allowInsecureHttp"`
	CertificateAuthority pulumi.StringPtrInput `pulumi:"certificateAuthority"`
	Password             pulumi.StringPtrInput `pulumi:"password"`
	Username             pulumi.StringPtrInput `pulumi:"username"`
}

func (ProviderGitHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderGitHttp)(nil)).Elem()
}

func (i ProviderGitHttpArgs) ToProviderGitHttpOutput() ProviderGitHttpOutput {
	return i.ToProviderGitHttpOutputWithContext(context.Background())
}

func (i ProviderGitHttpArgs) ToProviderGitHttpOutputWithContext(ctx context.Context) ProviderGitHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderGitHttpOutput)
}

func (i ProviderGitHttpArgs) ToProviderGitHttpPtrOutput() ProviderGitHttpPtrOutput {
	return i.ToProviderGitHttpPtrOutputWithContext(context.Background())
}

func (i ProviderGitHttpArgs) ToProviderGitHttpPtrOutputWithContext(ctx context.Context) ProviderGitHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderGitHttpOutput).ToProviderGitHttpPtrOutputWithContext(ctx)
}

// ProviderGitHttpPtrInput is an input type that accepts ProviderGitHttpArgs, ProviderGitHttpPtr and ProviderGitHttpPtrOutput values.
// You can construct a concrete instance of `ProviderGitHttpPtrInput` via:
//
//	        ProviderGitHttpArgs{...}
//
//	or:
//
//	        nil
type ProviderGitHttpPtrInput interface {
	pulumi.Input

	ToProviderGitHttpPtrOutput() ProviderGitHttpPtrOutput
	ToProviderGitHttpPtrOutputWithContext(context.Context) ProviderGitHttpPtrOutput
}

type providerGitHttpPtrType ProviderGitHttpArgs

func ProviderGitHttpPtr(v *ProviderGitHttpArgs) ProviderGitHttpPtrInput {
	return (*providerGitHttpPtrType)(v)
}

func (*providerGitHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderGitHttp)(nil)).Elem()
}

func (i *providerGitHttpPtrType) ToProviderGitHttpPtrOutput() ProviderGitHttpPtrOutput {
	return i.ToProviderGitHttpPtrOutputWithContext(context.Background())
}

func (i *providerGitHttpPtrType) ToProviderGitHttpPtrOutputWithContext(ctx context.Context) ProviderGitHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderGitHttpPtrOutput)
}

type ProviderGitHttpOutput struct{ *pulumi.OutputState }

func (ProviderGitHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderGitHttp)(nil)).Elem()
}

func (o ProviderGitHttpOutput) ToProviderGitHttpOutput() ProviderGitHttpOutput {
	return o
}

func (o ProviderGitHttpOutput) ToProviderGitHttpOutputWithContext(ctx context.Context) ProviderGitHttpOutput {
	return o
}

func (o ProviderGitHttpOutput) ToProviderGitHttpPtrOutput() ProviderGitHttpPtrOutput {
	return o.ToProviderGitHttpPtrOutputWithContext(context.Background())
}

func (o ProviderGitHttpOutput) ToProviderGitHttpPtrOutputWithContext(ctx context.Context) ProviderGitHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderGitHttp) *ProviderGitHttp {
		return &v
	}).(ProviderGitHttpPtrOutput)
}

func (o ProviderGitHttpOutput) AllowInsecureHttp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProviderGitHttp) *bool { return v.AllowInsecureHttp }).(pulumi.BoolPtrOutput)
}

func (o ProviderGitHttpOutput) CertificateAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGitHttp) *string { return v.CertificateAuthority }).(pulumi.StringPtrOutput)
}

func (o ProviderGitHttpOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGitHttp) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ProviderGitHttpOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGitHttp) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ProviderGitHttpPtrOutput struct{ *pulumi.OutputState }

func (ProviderGitHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderGitHttp)(nil)).Elem()
}

func (o ProviderGitHttpPtrOutput) ToProviderGitHttpPtrOutput() ProviderGitHttpPtrOutput {
	return o
}

func (o ProviderGitHttpPtrOutput) ToProviderGitHttpPtrOutputWithContext(ctx context.Context) ProviderGitHttpPtrOutput {
	return o
}

func (o ProviderGitHttpPtrOutput) Elem() ProviderGitHttpOutput {
	return o.ApplyT(func(v *ProviderGitHttp) ProviderGitHttp {
		if v != nil {
			return *v
		}
		var ret ProviderGitHttp
		return ret
	}).(ProviderGitHttpOutput)
}

func (o ProviderGitHttpPtrOutput) AllowInsecureHttp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProviderGitHttp) *bool {
		if v == nil {
			return nil
		}
		return v.AllowInsecureHttp
	}).(pulumi.BoolPtrOutput)
}

func (o ProviderGitHttpPtrOutput) CertificateAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGitHttp) *string {
		if v == nil {
			return nil
		}
		return v.CertificateAuthority
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitHttpPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGitHttp) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitHttpPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGitHttp) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ProviderGitSsh struct {
	Password   *string `pulumi:"password"`
	PrivateKey *string `pulumi:"privateKey"`
	Username   *string `pulumi:"username"`
}

// ProviderGitSshInput is an input type that accepts ProviderGitSshArgs and ProviderGitSshOutput values.
// You can construct a concrete instance of `ProviderGitSshInput` via:
//
//	ProviderGitSshArgs{...}
type ProviderGitSshInput interface {
	pulumi.Input

	ToProviderGitSshOutput() ProviderGitSshOutput
	ToProviderGitSshOutputWithContext(context.Context) ProviderGitSshOutput
}

type ProviderGitSshArgs struct {
	Password   pulumi.StringPtrInput `pulumi:"password"`
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	Username   pulumi.StringPtrInput `pulumi:"username"`
}

func (ProviderGitSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderGitSsh)(nil)).Elem()
}

func (i ProviderGitSshArgs) ToProviderGitSshOutput() ProviderGitSshOutput {
	return i.ToProviderGitSshOutputWithContext(context.Background())
}

func (i ProviderGitSshArgs) ToProviderGitSshOutputWithContext(ctx context.Context) ProviderGitSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderGitSshOutput)
}

func (i ProviderGitSshArgs) ToProviderGitSshPtrOutput() ProviderGitSshPtrOutput {
	return i.ToProviderGitSshPtrOutputWithContext(context.Background())
}

func (i ProviderGitSshArgs) ToProviderGitSshPtrOutputWithContext(ctx context.Context) ProviderGitSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderGitSshOutput).ToProviderGitSshPtrOutputWithContext(ctx)
}

// ProviderGitSshPtrInput is an input type that accepts ProviderGitSshArgs, ProviderGitSshPtr and ProviderGitSshPtrOutput values.
// You can construct a concrete instance of `ProviderGitSshPtrInput` via:
//
//	        ProviderGitSshArgs{...}
//
//	or:
//
//	        nil
type ProviderGitSshPtrInput interface {
	pulumi.Input

	ToProviderGitSshPtrOutput() ProviderGitSshPtrOutput
	ToProviderGitSshPtrOutputWithContext(context.Context) ProviderGitSshPtrOutput
}

type providerGitSshPtrType ProviderGitSshArgs

func ProviderGitSshPtr(v *ProviderGitSshArgs) ProviderGitSshPtrInput {
	return (*providerGitSshPtrType)(v)
}

func (*providerGitSshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderGitSsh)(nil)).Elem()
}

func (i *providerGitSshPtrType) ToProviderGitSshPtrOutput() ProviderGitSshPtrOutput {
	return i.ToProviderGitSshPtrOutputWithContext(context.Background())
}

func (i *providerGitSshPtrType) ToProviderGitSshPtrOutputWithContext(ctx context.Context) ProviderGitSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderGitSshPtrOutput)
}

type ProviderGitSshOutput struct{ *pulumi.OutputState }

func (ProviderGitSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderGitSsh)(nil)).Elem()
}

func (o ProviderGitSshOutput) ToProviderGitSshOutput() ProviderGitSshOutput {
	return o
}

func (o ProviderGitSshOutput) ToProviderGitSshOutputWithContext(ctx context.Context) ProviderGitSshOutput {
	return o
}

func (o ProviderGitSshOutput) ToProviderGitSshPtrOutput() ProviderGitSshPtrOutput {
	return o.ToProviderGitSshPtrOutputWithContext(context.Background())
}

func (o ProviderGitSshOutput) ToProviderGitSshPtrOutputWithContext(ctx context.Context) ProviderGitSshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderGitSsh) *ProviderGitSsh {
		return &v
	}).(ProviderGitSshPtrOutput)
}

func (o ProviderGitSshOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGitSsh) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ProviderGitSshOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGitSsh) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o ProviderGitSshOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderGitSsh) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ProviderGitSshPtrOutput struct{ *pulumi.OutputState }

func (ProviderGitSshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderGitSsh)(nil)).Elem()
}

func (o ProviderGitSshPtrOutput) ToProviderGitSshPtrOutput() ProviderGitSshPtrOutput {
	return o
}

func (o ProviderGitSshPtrOutput) ToProviderGitSshPtrOutputWithContext(ctx context.Context) ProviderGitSshPtrOutput {
	return o
}

func (o ProviderGitSshPtrOutput) Elem() ProviderGitSshOutput {
	return o.ApplyT(func(v *ProviderGitSsh) ProviderGitSsh {
		if v != nil {
			return *v
		}
		var ret ProviderGitSsh
		return ret
	}).(ProviderGitSshOutput)
}

func (o ProviderGitSshPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGitSsh) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitSshPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGitSsh) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

func (o ProviderGitSshPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderGitSsh) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ProviderKubernetes struct {
	ClientCertificate     *string  `pulumi:"clientCertificate"`
	ClientKey             *string  `pulumi:"clientKey"`
	ClusterCaCertificate  *string  `pulumi:"clusterCaCertificate"`
	ConfigContext         *string  `pulumi:"configContext"`
	ConfigContextAuthInfo *string  `pulumi:"configContextAuthInfo"`
	ConfigContextCluster  *string  `pulumi:"configContextCluster"`
	ConfigPath            *string  `pulumi:"configPath"`
	ConfigPaths           []string `pulumi:"configPaths"`
	Host                  *string  `pulumi:"host"`
	Insecure              *bool    `pulumi:"insecure"`
	Password              *string  `pulumi:"password"`
	ProxyUrl              *string  `pulumi:"proxyUrl"`
	Token                 *string  `pulumi:"token"`
	Username              *string  `pulumi:"username"`
}

// ProviderKubernetesInput is an input type that accepts ProviderKubernetesArgs and ProviderKubernetesOutput values.
// You can construct a concrete instance of `ProviderKubernetesInput` via:
//
//	ProviderKubernetesArgs{...}
type ProviderKubernetesInput interface {
	pulumi.Input

	ToProviderKubernetesOutput() ProviderKubernetesOutput
	ToProviderKubernetesOutputWithContext(context.Context) ProviderKubernetesOutput
}

type ProviderKubernetesArgs struct {
	ClientCertificate     pulumi.StringPtrInput   `pulumi:"clientCertificate"`
	ClientKey             pulumi.StringPtrInput   `pulumi:"clientKey"`
	ClusterCaCertificate  pulumi.StringPtrInput   `pulumi:"clusterCaCertificate"`
	ConfigContext         pulumi.StringPtrInput   `pulumi:"configContext"`
	ConfigContextAuthInfo pulumi.StringPtrInput   `pulumi:"configContextAuthInfo"`
	ConfigContextCluster  pulumi.StringPtrInput   `pulumi:"configContextCluster"`
	ConfigPath            pulumi.StringPtrInput   `pulumi:"configPath"`
	ConfigPaths           pulumi.StringArrayInput `pulumi:"configPaths"`
	Host                  pulumi.StringPtrInput   `pulumi:"host"`
	Insecure              pulumi.BoolPtrInput     `pulumi:"insecure"`
	Password              pulumi.StringPtrInput   `pulumi:"password"`
	ProxyUrl              pulumi.StringPtrInput   `pulumi:"proxyUrl"`
	Token                 pulumi.StringPtrInput   `pulumi:"token"`
	Username              pulumi.StringPtrInput   `pulumi:"username"`
}

func (ProviderKubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderKubernetes)(nil)).Elem()
}

func (i ProviderKubernetesArgs) ToProviderKubernetesOutput() ProviderKubernetesOutput {
	return i.ToProviderKubernetesOutputWithContext(context.Background())
}

func (i ProviderKubernetesArgs) ToProviderKubernetesOutputWithContext(ctx context.Context) ProviderKubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesOutput)
}

func (i ProviderKubernetesArgs) ToProviderKubernetesPtrOutput() ProviderKubernetesPtrOutput {
	return i.ToProviderKubernetesPtrOutputWithContext(context.Background())
}

func (i ProviderKubernetesArgs) ToProviderKubernetesPtrOutputWithContext(ctx context.Context) ProviderKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesOutput).ToProviderKubernetesPtrOutputWithContext(ctx)
}

// ProviderKubernetesPtrInput is an input type that accepts ProviderKubernetesArgs, ProviderKubernetesPtr and ProviderKubernetesPtrOutput values.
// You can construct a concrete instance of `ProviderKubernetesPtrInput` via:
//
//	        ProviderKubernetesArgs{...}
//
//	or:
//
//	        nil
type ProviderKubernetesPtrInput interface {
	pulumi.Input

	ToProviderKubernetesPtrOutput() ProviderKubernetesPtrOutput
	ToProviderKubernetesPtrOutputWithContext(context.Context) ProviderKubernetesPtrOutput
}

type providerKubernetesPtrType ProviderKubernetesArgs

func ProviderKubernetesPtr(v *ProviderKubernetesArgs) ProviderKubernetesPtrInput {
	return (*providerKubernetesPtrType)(v)
}

func (*providerKubernetesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderKubernetes)(nil)).Elem()
}

func (i *providerKubernetesPtrType) ToProviderKubernetesPtrOutput() ProviderKubernetesPtrOutput {
	return i.ToProviderKubernetesPtrOutputWithContext(context.Background())
}

func (i *providerKubernetesPtrType) ToProviderKubernetesPtrOutputWithContext(ctx context.Context) ProviderKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesPtrOutput)
}

type ProviderKubernetesOutput struct{ *pulumi.OutputState }

func (ProviderKubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderKubernetes)(nil)).Elem()
}

func (o ProviderKubernetesOutput) ToProviderKubernetesOutput() ProviderKubernetesOutput {
	return o
}

func (o ProviderKubernetesOutput) ToProviderKubernetesOutputWithContext(ctx context.Context) ProviderKubernetesOutput {
	return o
}

func (o ProviderKubernetesOutput) ToProviderKubernetesPtrOutput() ProviderKubernetesPtrOutput {
	return o.ToProviderKubernetesPtrOutputWithContext(context.Background())
}

func (o ProviderKubernetesOutput) ToProviderKubernetesPtrOutputWithContext(ctx context.Context) ProviderKubernetesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderKubernetes) *ProviderKubernetes {
		return &v
	}).(ProviderKubernetesPtrOutput)
}

func (o ProviderKubernetesOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ConfigContext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ConfigContext }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ConfigContextAuthInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ConfigContextAuthInfo }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ConfigContextCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ConfigContextCluster }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ConfigPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ConfigPath }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ConfigPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderKubernetes) []string { return v.ConfigPaths }).(pulumi.StringArrayOutput)
}

func (o ProviderKubernetesOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

func (o ProviderKubernetesOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ProxyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ProxyUrl }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.Token }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ProviderKubernetesPtrOutput struct{ *pulumi.OutputState }

func (ProviderKubernetesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderKubernetes)(nil)).Elem()
}

func (o ProviderKubernetesPtrOutput) ToProviderKubernetesPtrOutput() ProviderKubernetesPtrOutput {
	return o
}

func (o ProviderKubernetesPtrOutput) ToProviderKubernetesPtrOutputWithContext(ctx context.Context) ProviderKubernetesPtrOutput {
	return o
}

func (o ProviderKubernetesPtrOutput) Elem() ProviderKubernetesOutput {
	return o.ApplyT(func(v *ProviderKubernetes) ProviderKubernetes {
		if v != nil {
			return *v
		}
		var ret ProviderKubernetes
		return ret
	}).(ProviderKubernetesOutput)
}

func (o ProviderKubernetesPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ClientKey
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ClusterCaCertificate
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ConfigContext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ConfigContext
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ConfigContextAuthInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ConfigContextAuthInfo
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ConfigContextCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ConfigContextCluster
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ConfigPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ConfigPath
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ConfigPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderKubernetes) []string {
		if v == nil {
			return nil
		}
		return v.ConfigPaths
	}).(pulumi.StringArrayOutput)
}

func (o ProviderKubernetesPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

func (o ProviderKubernetesPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ProxyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ProxyUrl
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.Token
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderGitInput)(nil)).Elem(), ProviderGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderGitPtrInput)(nil)).Elem(), ProviderGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderGitHttpInput)(nil)).Elem(), ProviderGitHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderGitHttpPtrInput)(nil)).Elem(), ProviderGitHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderGitSshInput)(nil)).Elem(), ProviderGitSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderGitSshPtrInput)(nil)).Elem(), ProviderGitSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderKubernetesInput)(nil)).Elem(), ProviderKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderKubernetesPtrInput)(nil)).Elem(), ProviderKubernetesArgs{})
	pulumi.RegisterOutputType(ProviderGitOutput{})
	pulumi.RegisterOutputType(ProviderGitPtrOutput{})
	pulumi.RegisterOutputType(ProviderGitHttpOutput{})
	pulumi.RegisterOutputType(ProviderGitHttpPtrOutput{})
	pulumi.RegisterOutputType(ProviderGitSshOutput{})
	pulumi.RegisterOutputType(ProviderGitSshPtrOutput{})
	pulumi.RegisterOutputType(ProviderKubernetesOutput{})
	pulumi.RegisterOutputType(ProviderKubernetesPtrOutput{})
}
