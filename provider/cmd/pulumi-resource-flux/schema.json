{
    "name": "flux",
    "displayName": "Flux",
    "description": "A Pulumi package for creating and managing Flux cloud resources.",
    "keywords": [
        "pulumi",
        "flux",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`flux` Terraform Provider](https://github.com/fluxcd/terraform-provider-flux).",
    "repository": "https://github.com/oun/pulumi-flux",
    "pluginDownloadURL": "github://api.github.com/oun",
    "publisher": "oun",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/oun/pulumi-flux/sdk/go/flux"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Flux cloud resources.",
            "packageName": "@worawat/flux",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/fluxcd/terraform-provider-flux)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-flux` repo](https://github.com/oun/pulumi-flux/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-flux` repo](https://github.com/fluxcd/terraform-provider-flux/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/fluxcd/terraform-provider-flux)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-flux` repo](https://github.com/oun/pulumi-flux/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-flux` repo](https://github.com/fluxcd/terraform-provider-flux/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "git": {
                "$ref": "#/types/flux:config/git:git",
                "description": "Configuration block with settings for Kubernetes.\n"
            },
            "kubernetes": {
                "$ref": "#/types/flux:config/kubernetes:kubernetes",
                "description": "Configuration block with settings for Kubernetes.\n"
            }
        }
    },
    "types": {
        "flux:config/git:git": {
            "properties": {
                "authorEmail": {
                    "type": "string"
                },
                "authorName": {
                    "type": "string"
                },
                "branch": {
                    "type": "string"
                },
                "commitMessageAppendix": {
                    "type": "string"
                },
                "gpgKeyId": {
                    "type": "string"
                },
                "gpgKeyRing": {
                    "type": "string"
                },
                "gpgPassphrase": {
                    "type": "string",
                    "secret": true
                },
                "http": {
                    "$ref": "#/types/flux:config/gitHttp:gitHttp"
                },
                "ssh": {
                    "$ref": "#/types/flux:config/gitSsh:gitSsh"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "flux:config/gitHttp:gitHttp": {
            "properties": {
                "allowInsecureHttp": {
                    "type": "boolean"
                },
                "certificateAuthority": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "flux:config/gitSsh:gitSsh": {
            "properties": {
                "password": {
                    "type": "string",
                    "secret": true
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "flux:config/kubernetes:kubernetes": {
            "properties": {
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clusterCaCertificate": {
                    "type": "string"
                },
                "configContext": {
                    "type": "string"
                },
                "configContextAuthInfo": {
                    "type": "string"
                },
                "configContextCluster": {
                    "type": "string"
                },
                "configPath": {
                    "type": "string"
                },
                "configPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exec": {
                    "$ref": "#/types/flux:config/kubernetesExec:kubernetesExec"
                },
                "host": {
                    "type": "string"
                },
                "insecure": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "proxyUrl": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "flux:config/kubernetesExec:kubernetesExec": {
            "properties": {
                "apiVersion": {
                    "type": "string"
                },
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "command": {
                    "type": "string"
                },
                "env": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "apiVersion",
                "command"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "flux:index/FluxBootstrapGitTimeouts:FluxBootstrapGitTimeouts": {
            "properties": {
                "create": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours).\n"
                },
                "delete": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.\n"
                },
                "read": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.\n"
                },
                "update": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours).\n"
                }
            },
            "type": "object"
        },
        "flux:index/ProviderGit:ProviderGit": {
            "properties": {
                "authorEmail": {
                    "type": "string"
                },
                "authorName": {
                    "type": "string"
                },
                "branch": {
                    "type": "string"
                },
                "commitMessageAppendix": {
                    "type": "string"
                },
                "gpgKeyId": {
                    "type": "string"
                },
                "gpgKeyRing": {
                    "type": "string"
                },
                "gpgPassphrase": {
                    "type": "string",
                    "secret": true
                },
                "http": {
                    "$ref": "#/types/flux:index/ProviderGitHttp:ProviderGitHttp"
                },
                "ssh": {
                    "$ref": "#/types/flux:index/ProviderGitSsh:ProviderGitSsh"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": []
                }
            }
        },
        "flux:index/ProviderGitHttp:ProviderGitHttp": {
            "properties": {
                "allowInsecureHttp": {
                    "type": "boolean"
                },
                "certificateAuthority": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "flux:index/ProviderGitSsh:ProviderGitSsh": {
            "properties": {
                "password": {
                    "type": "string",
                    "secret": true
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "flux:index/ProviderKubernetes:ProviderKubernetes": {
            "properties": {
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clusterCaCertificate": {
                    "type": "string"
                },
                "configContext": {
                    "type": "string"
                },
                "configContextAuthInfo": {
                    "type": "string"
                },
                "configContextCluster": {
                    "type": "string"
                },
                "configPath": {
                    "type": "string"
                },
                "configPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exec": {
                    "$ref": "#/types/flux:index/ProviderKubernetesExec:ProviderKubernetesExec"
                },
                "host": {
                    "type": "string"
                },
                "insecure": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "proxyUrl": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "flux:index/ProviderKubernetesExec:ProviderKubernetesExec": {
            "properties": {
                "apiVersion": {
                    "type": "string"
                },
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "command": {
                    "type": "string"
                },
                "env": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "apiVersion",
                "command"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the flux package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "git": {
                "$ref": "#/types/flux:index/ProviderGit:ProviderGit",
                "description": "Configuration block with settings for Kubernetes.\n"
            },
            "kubernetes": {
                "$ref": "#/types/flux:index/ProviderKubernetes:ProviderKubernetes",
                "description": "Configuration block with settings for Kubernetes.\n"
            }
        },
        "inputProperties": {
            "git": {
                "$ref": "#/types/flux:index/ProviderGit:ProviderGit",
                "description": "Configuration block with settings for Kubernetes.\n"
            },
            "kubernetes": {
                "$ref": "#/types/flux:index/ProviderKubernetes:ProviderKubernetes",
                "description": "Configuration block with settings for Kubernetes.\n"
            }
        }
    },
    "resources": {
        "flux:index/fluxBootstrapGit:FluxBootstrapGit": {
            "description": "Commits Flux components to a Git repository and configures a Kubernetes cluster to synchronize with the same Git repository.\n\n\u003e **NOTE:** Checkout the GitHub bootstrap guide for a detailed step by step guide.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nGet Kubernetes credentials from a kubeconfig file. The current context set in the kubeconfig file will be used by default.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as flux from \"@worawat/flux\";\n\nconst _this = new flux.FluxBootstrapGit(\"this\", {path: \"clusters/my-cluster\"});\n```\n```python\nimport pulumi\nimport pulumi_flux as flux\n\nthis = flux.FluxBootstrapGit(\"this\", path=\"clusters/my-cluster\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Flux = Pulumi.Flux;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @this = new Flux.FluxBootstrapGit(\"this\", new()\n    {\n        Path = \"clusters/my-cluster\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/oun/pulumi-flux/sdk/go/flux\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := flux.NewFluxBootstrapGit(ctx, \"this\", \u0026flux.FluxBootstrapGitArgs{\n\t\t\tPath: pulumi.String(\"clusters/my-cluster\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.flux.FluxBootstrapGit;\nimport com.pulumi.flux.FluxBootstrapGitArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var this_ = new FluxBootstrapGit(\"this\", FluxBootstrapGitArgs.builder()        \n            .path(\"clusters/my-cluster\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  this:\n    type: flux:FluxBootstrapGit\n    properties:\n      path: clusters/my-cluster\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nExisting Flux installations can be imported by passing the namespace where Flux is installed.\n\n```sh\n $ pulumi import flux:index/fluxBootstrapGit:FluxBootstrapGit this flux-system\n```\n\n ",
            "properties": {
                "clusterDomain": {
                    "type": "string",
                    "description": "The internal cluster domain. Defaults to `cluster.local`\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Toolkit components to include in the install manifests. Defaults to `[source-controller kustomize-controller helm-controller notification-controller]`\n"
                },
                "componentsExtras": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of extra components to include in the install manifests.\n"
                },
                "disableSecretCreation": {
                    "type": "boolean",
                    "description": "Use the existing secret for flux controller and don't create one from bootstrap\n"
                },
                "imagePullSecret": {
                    "type": "string",
                    "description": "Kubernetes secret name used for pulling the toolkit images from a private registry.\n"
                },
                "interval": {
                    "type": "string",
                    "description": "Interval at which to reconcile from bootstrap repository. Defaults to `1m0s`.\n"
                },
                "kustomizationOverride": {
                    "type": "string",
                    "description": "Kustomization to override configuration set by default.\n"
                },
                "logLevel": {
                    "type": "string",
                    "description": "Log level for toolkit components. Defaults to `info`.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The namespace scope for install manifests. Defaults to `flux-system`.\n"
                },
                "networkPolicy": {
                    "type": "boolean",
                    "description": "Deny ingress access to the toolkit controllers from other namespaces using network policies. Defaults to `true`.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path relative to the repository root, when specified the cluster sync will be scoped to this path.\n"
                },
                "recurseSubmodules": {
                    "type": "boolean",
                    "description": "Configures the GitRepository source to initialize and include Git submodules in the artifact it produces.\n"
                },
                "registry": {
                    "type": "string",
                    "description": "Container registry where the toolkit images are published. Defaults to `ghcr.io/fluxcd`.\n"
                },
                "repositoryFiles": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Git repository files created and managed by the provider.\n"
                },
                "secretName": {
                    "type": "string",
                    "description": "Name of the secret the sync credentials can be found in or stored to. Defaults to `flux-system`.\n"
                },
                "timeouts": {
                    "$ref": "#/types/flux:index/FluxBootstrapGitTimeouts:FluxBootstrapGitTimeouts"
                },
                "tolerationKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of toleration keys used to schedule the components pods onto nodes with matching taints.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Flux version. Defaults to `v2.0.1`.\n"
                },
                "watchAllNamespaces": {
                    "type": "boolean",
                    "description": "If true watch for custom resources in all namespaces. Defaults to `true`.\n"
                }
            },
            "required": [
                "clusterDomain",
                "components",
                "interval",
                "logLevel",
                "namespace",
                "networkPolicy",
                "registry",
                "repositoryFiles",
                "secretName",
                "version",
                "watchAllNamespaces"
            ],
            "inputProperties": {
                "clusterDomain": {
                    "type": "string",
                    "description": "The internal cluster domain. Defaults to `cluster.local`\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Toolkit components to include in the install manifests. Defaults to `[source-controller kustomize-controller helm-controller notification-controller]`\n"
                },
                "componentsExtras": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of extra components to include in the install manifests.\n"
                },
                "disableSecretCreation": {
                    "type": "boolean",
                    "description": "Use the existing secret for flux controller and don't create one from bootstrap\n"
                },
                "imagePullSecret": {
                    "type": "string",
                    "description": "Kubernetes secret name used for pulling the toolkit images from a private registry.\n"
                },
                "interval": {
                    "type": "string",
                    "description": "Interval at which to reconcile from bootstrap repository. Defaults to `1m0s`.\n"
                },
                "kustomizationOverride": {
                    "type": "string",
                    "description": "Kustomization to override configuration set by default.\n"
                },
                "logLevel": {
                    "type": "string",
                    "description": "Log level for toolkit components. Defaults to `info`.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The namespace scope for install manifests. Defaults to `flux-system`.\n"
                },
                "networkPolicy": {
                    "type": "boolean",
                    "description": "Deny ingress access to the toolkit controllers from other namespaces using network policies. Defaults to `true`.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path relative to the repository root, when specified the cluster sync will be scoped to this path.\n"
                },
                "recurseSubmodules": {
                    "type": "boolean",
                    "description": "Configures the GitRepository source to initialize and include Git submodules in the artifact it produces.\n"
                },
                "registry": {
                    "type": "string",
                    "description": "Container registry where the toolkit images are published. Defaults to `ghcr.io/fluxcd`.\n"
                },
                "secretName": {
                    "type": "string",
                    "description": "Name of the secret the sync credentials can be found in or stored to. Defaults to `flux-system`.\n"
                },
                "timeouts": {
                    "$ref": "#/types/flux:index/FluxBootstrapGitTimeouts:FluxBootstrapGitTimeouts"
                },
                "tolerationKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of toleration keys used to schedule the components pods onto nodes with matching taints.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Flux version. Defaults to `v2.0.1`.\n"
                },
                "watchAllNamespaces": {
                    "type": "boolean",
                    "description": "If true watch for custom resources in all namespaces. Defaults to `true`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FluxBootstrapGit resources.\n",
                "properties": {
                    "clusterDomain": {
                        "type": "string",
                        "description": "The internal cluster domain. Defaults to `cluster.local`\n"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Toolkit components to include in the install manifests. Defaults to `[source-controller kustomize-controller helm-controller notification-controller]`\n"
                    },
                    "componentsExtras": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of extra components to include in the install manifests.\n"
                    },
                    "disableSecretCreation": {
                        "type": "boolean",
                        "description": "Use the existing secret for flux controller and don't create one from bootstrap\n"
                    },
                    "imagePullSecret": {
                        "type": "string",
                        "description": "Kubernetes secret name used for pulling the toolkit images from a private registry.\n"
                    },
                    "interval": {
                        "type": "string",
                        "description": "Interval at which to reconcile from bootstrap repository. Defaults to `1m0s`.\n"
                    },
                    "kustomizationOverride": {
                        "type": "string",
                        "description": "Kustomization to override configuration set by default.\n"
                    },
                    "logLevel": {
                        "type": "string",
                        "description": "Log level for toolkit components. Defaults to `info`.\n"
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The namespace scope for install manifests. Defaults to `flux-system`.\n"
                    },
                    "networkPolicy": {
                        "type": "boolean",
                        "description": "Deny ingress access to the toolkit controllers from other namespaces using network policies. Defaults to `true`.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Path relative to the repository root, when specified the cluster sync will be scoped to this path.\n"
                    },
                    "recurseSubmodules": {
                        "type": "boolean",
                        "description": "Configures the GitRepository source to initialize and include Git submodules in the artifact it produces.\n"
                    },
                    "registry": {
                        "type": "string",
                        "description": "Container registry where the toolkit images are published. Defaults to `ghcr.io/fluxcd`.\n"
                    },
                    "repositoryFiles": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Git repository files created and managed by the provider.\n"
                    },
                    "secretName": {
                        "type": "string",
                        "description": "Name of the secret the sync credentials can be found in or stored to. Defaults to `flux-system`.\n"
                    },
                    "timeouts": {
                        "$ref": "#/types/flux:index/FluxBootstrapGitTimeouts:FluxBootstrapGitTimeouts"
                    },
                    "tolerationKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of toleration keys used to schedule the components pods onto nodes with matching taints.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Flux version. Defaults to `v2.0.1`.\n"
                    },
                    "watchAllNamespaces": {
                        "type": "boolean",
                        "description": "If true watch for custom resources in all namespaces. Defaults to `true`.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "flux:index/getFluxInstall:getFluxInstall": {
            "inputs": {
                "description": "A collection of arguments for invoking getFluxInstall.\n",
                "properties": {
                    "baseurl": {
                        "type": "string"
                    },
                    "clusterDomain": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "componentsExtras": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "imagePullSecrets": {
                        "type": "string"
                    },
                    "logLevel": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "networkPolicy": {
                        "type": "boolean"
                    },
                    "registry": {
                        "type": "string"
                    },
                    "targetPath": {
                        "type": "string"
                    },
                    "tolerationKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "version": {
                        "type": "string"
                    },
                    "watchAllNamespaces": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "targetPath"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFluxInstall.\n",
                "properties": {
                    "baseurl": {
                        "type": "string"
                    },
                    "clusterDomain": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "componentsExtras": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "content": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "imagePullSecrets": {
                        "type": "string"
                    },
                    "logLevel": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "networkPolicy": {
                        "type": "boolean"
                    },
                    "path": {
                        "type": "string"
                    },
                    "registry": {
                        "type": "string"
                    },
                    "targetPath": {
                        "type": "string"
                    },
                    "tolerationKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "version": {
                        "type": "string"
                    },
                    "watchAllNamespaces": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "content",
                    "id",
                    "path",
                    "targetPath"
                ]
            }
        },
        "flux:index/getFluxSync:getFluxSync": {
            "inputs": {
                "description": "A collection of arguments for invoking getFluxSync.\n",
                "properties": {
                    "branch": {
                        "type": "string"
                    },
                    "commit": {
                        "type": "string"
                    },
                    "interval": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "patchNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "secret": {
                        "type": "string"
                    },
                    "semver": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "targetPath": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "targetPath",
                    "url"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFluxSync.\n",
                "properties": {
                    "branch": {
                        "type": "string"
                    },
                    "commit": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interval": {
                        "type": "integer"
                    },
                    "kustomizeContent": {
                        "type": "string"
                    },
                    "kustomizePath": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "patchFilePaths": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "patchNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "path": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "semver": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "targetPath": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "content",
                    "id",
                    "kustomizeContent",
                    "kustomizePath",
                    "patchFilePaths",
                    "path",
                    "targetPath",
                    "url"
                ]
            }
        }
    }
}